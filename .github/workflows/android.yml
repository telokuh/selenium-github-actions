name: Android Emulator + noVNC via Tailscale

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  # Konfigurasi VNC/Pengguna
  VNC_USER: runner
  VNC_PASS: runner
  VNC_PORT: 5901
  NOVNC_PORT: 6080
  # Konfigurasi Android
  ANDROID_API: 30
  AVD_NAME: MyAndroidDevice
  # ANDROID_HOME akan ditetapkan oleh action Google
  # Konfigurasi Tailscale
  TS_HOSTNAME: gh-android-novnc
  
jobs:
  setup-gui-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 370
    
    steps:
      - uses: actions/checkout@v4

      - name: 🔧 Fix APT Cache Permissions
        run: |
          echo "set man-db/auto-update false" | sudo DEBIAN_FRONTEND=noninteractive debconf-communicate || true
          # Perbaiki izin untuk APT dan Debconf cache
          sudo chown -R $USER:$USER /var/cache/apt
          sudo chown -R $USER:$USER /var/lib/apt
          sudo chown -R $USER:$USER /var/cache/debconf
          
          # Hapus lock files
          sudo rm -f /var/cache/apt/archives/lock
          sudo rm -f /var/lib/apt/lists/lock
          sudo rm -f /var/cache/debconf/config.dat
          sudo rm -f /var/cache/debconf/passwords.dat

      - name: Ensure runner user exists and configure VNC password
        run: |
          echo "${{ env.VNC_USER }}:${{ env.VNC_PASS }}" | sudo chpasswd
          echo "${{ env.VNC_USER }} ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/${{ env.VNC_USER }}

      - name: Install XFCE, VNC Server, and noVNC/Websockify
        run: |
          echo ">>> Updating & Installing Base Components..."
          
          echo "set man-db/auto-update false" | sudo DEBIAN_FRONTEND=noninteractive debconf-communicate || true
          
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -qq \
            xfce4 xorg dbus-x11 \
            tigervnc-standalone-server tigervnc-common \
            git python3-websockify jq
          
          sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure man-db || true
          
          echo ">>> Configuring VNC..."
          mkdir -p /home/${{ env.VNC_USER }}/.vnc
          echo ${{ env.VNC_PASS }} | vncpasswd -f > /home/${{ env.VNC_USER }}/.vnc/passwd
          chmod 600 /home/${{ env.VNC_USER }}/.vnc/passwd
          chown -R ${{ env.VNC_USER }}:${{ env.VNC_USER }} /home/${{ env.VNC_USER }}/.vnc
          
          echo "startxfce4" > /home/${{ env.VNC_USER }}/.xsession
          chown ${{ env.VNC_USER }}:${{ env.VNC_USER }} /home/${{ env.VNC_USER }}/.xsession
          
          echo ">>> Installing noVNC..."
          git clone https://github.com/novnc/noVNC.git /opt/noVNC
          ln -s /opt/noVNC/vnc.html /opt/noVNC/index.html
          
      # --- [ BAGIAN SETUP CACHE & TAILSCALE ] ---

      - name: ⚙️ Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sudo sh
          sudo chown -R ${{ env.VNC_USER }}:${{ env.VNC_USER }} /var/lib/tailscale
          
      - name: 📦 Cache Tailscale State
        id: cache-ts
        uses: actions/cache@v3
        with:
          path: /var/lib/tailscale
          key: ${{ runner.os }}-tailscale-${{ runner.arch }}-${{ env.TS_HOSTNAME }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tailscale-${{ runner.arch }}-${{ env.TS_HOSTNAME }}-
            
      - name: 🔗 Tailscale up (Persistent)
        run: |
          AUTH_PARAM=""
          if [[ "${{ steps.cache-ts.outputs.cache-hit }}" != "true" ]]; then
              echo "Cache Tailscale tidak ditemukan, menggunakan Authkey untuk pendaftaran."
              AUTH_PARAM="--authkey ${{ secrets.TAILSCALE_AUTHKEY }}"
          else
              echo "Cache Tailscale ditemukan, terhubung kembali."
          fi
          
          sudo tailscale up \
            ${AUTH_PARAM} \
            --hostname ${{ env.TS_HOSTNAME }} \
            --accept-routes \
            --accept-dns=false \
            --timeout=0
            
          sleep 5

      # --- [ BAGIAN SETUP ANDROID EMULATOR (OFFICIAL) ] ---

      # Menggantikan semua langkah Java/SDK dengan action resmi Google
      - name: 🤖 Setup Android SDK, Tools, and Java (Official)
        uses: android/setup-android@v1
        with:
          # Versi Java 17
          java-version: 17
          # Versi API
          api-level: ${{ env.ANDROID_API }}
          # System image dan tools yang dibutuhkan
          components: 'platform-tools, build-tools/${{ env.ANDROID_API }}.0.0, emulator, system-images;android-${{ env.ANDROID_API }};google_apis;x86_64'
          
      # Kunci: Sekarang avdmanager dan emulator sudah ada di PATH
      - name: 🏗️ Create AVD (Always Run)
        run: |
          echo "no" | avdmanager create avd -n ${{ env.AVD_NAME }} -k "system-images;android-${{ env.ANDROID_API }};google_apis;x86_64" --device "pixel" --force
          avdmanager list avd

      - name: 📱 Start Android Emulator in Background
        run: |
          echo "Memulai Android Emulator..."
          # Jalankan di bawah user VNC
          sudo -u ${{ env.VNC_USER }} nohup emulator -avd ${{ env.AVD_NAME }} -gpu swiftshader_indirect -no-audio -accel off &
          
          echo "Menunggu 120 detik agar emulator boot..."
          sleep 120 
          
          adb devices
          
      # --- [ BAGIAN START LAYANAN & KEEP ALIVE ] ---

      - name: Start VNC, noVNC proxy, and Show URL
        run: |
          echo ">>> Starting VNC server..."
          sudo -u ${{ env.VNC_USER }} vncserver :1 -geometry 1280x800 -depth 24
          
          echo ">>> Starting noVNC websockify..."
          nohup websockify --web=/opt/noVNC ${{ env.NOVNC_PORT }} localhost:${{ env.VNC_PORT }} &

          TAILSCALE_IP=$(tailscale ip -4 | head -n1)
          VNC_URL="http://${TAILSCALE_IP}:${{ env.NOVNC_PORT }}/vnc.html"

          echo "==========================================="
          echo "=== KONEKSI VNC VIA NO VNC / TAILSCALE ==="
          echo "==========================================="
          echo "USERNAME: ${{ env.VNC_USER }}"
          echo "PASSWORD: ${{ env.VNC_PASS }}"
          echo "IP TAILSCALE: ${TAILSCALE_IP}"
          echo "-------------------------------------------"
          echo "URL NO VNC (Akses dari Browser Anda):"
          echo "${VNC_URL}"
          echo "==========================================="
          
          echo ">>> Keeping runner alive (Timeout 370 mins)..."
          while true; do
            adb devices
            sleep 600
          done
